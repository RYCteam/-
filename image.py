import cv2
from ultralytics import YOLO
import os
import requests

# Discord Webhook URL
DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/1389905612409802843/1NSMixTKW7N6HMaugh-sopI8gy42RUGDJFLayX_BEzcciVzJgGQfEi_NUwa7J1w1tW7T'

def send_discord_alert(image_path):
    with open(image_path, 'rb') as f:
        files = {'file': (os.path.basename(image_path), f, 'image/jpeg')}
        data = {
            'content': f'üö® ‡∏û‡∏ö‡∏Ñ‡∏ô‡∏à‡∏°‡∏ô‡πâ‡∏≥!'
        }
        try:
            response = requests.post(DISCORD_WEBHOOK_URL, data=data, files=files)
            if response.status_code == 204 or response.status_code == 200:
                print('‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
            else:
                print(f'‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {response.status_code} {response.text}')
        except Exception as e:
            print(f'‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord: {e}')

# --- 1. ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• 'best.pt' ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ---
model = YOLO('bestt.pt') 

# --- 2. ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ô‡∏¥‡πà‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö ---
image_path = '‡∏Ñ‡∏•‡∏≠‡∏á2.jpg' # ‡∏ú‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
try:
    # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ô‡∏¥‡πà‡∏á
    img = cv2.imread(image_path)
    
    # --- 3. ‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÉ‡∏ô‡∏†‡∏≤‡∏û (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à) ---
    # ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° conf=0.1 ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ß‡πà‡∏≤ "‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡πÅ‡∏Ñ‡πà 10% ‡∏Å‡πá‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏≠‡∏Å‡∏°‡∏≤"
    results = model(img, conf=0.1)

    # --- 4. ‡∏ô‡∏≥‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏°‡∏≤‡∏ß‡∏≤‡∏î‡∏•‡∏á‡∏ö‡∏ô‡∏†‡∏≤‡∏û ---
    annotated_img = results[0].plot()

    # --- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ class 'drowning' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ---
    found_drowning = False
    for box in results[0].boxes:
        class_id = int(box.cls[0].item())
        class_name = model.names[class_id]
        if class_name == 'drowning':
            found_drowning = True
            break

    # --- ‡∏ñ‡πâ‡∏≤‡∏û‡∏ö drowning ‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Discord ---
    if found_drowning:
        output_folder = 'output_images'
        os.makedirs(output_folder, exist_ok=True)
        alert_img_path = os.path.join(output_folder, f'drowning_alert_{os.path.basename(image_path)}')
        cv2.imwrite(alert_img_path, annotated_img)
        send_discord_alert(alert_img_path)

    # --- 5. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---
    cv2.imshow("AI Model Test - Press any key to exit", annotated_img)

    # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏î‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∂‡∏á‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á
    cv2.waitKey(0)
    cv2.destroyAllWindows()

except FileNotFoundError:
    print(f"Error: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå '{image_path}'")
    print("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà")
except Exception as e:
    print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
